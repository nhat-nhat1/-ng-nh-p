import React from 'react';
import { useLocation, useNavigate, Link } from 'react-router-dom';

export default function LoginErrorPage() {
  const location = useLocation();
  const navigate = useNavigate();
  
  // Get error information from location state or URL params
  const errorType = location.state?.errorType || new URLSearchParams(location.search).get('error') || 'general';
  const errorMessage = location.state?.errorMessage || new URLSearchParams(location.search).get('message') || 'C√≥ l·ªói x·∫£y ra khi ƒëƒÉng nh·∫≠p';
  const email = location.state?.email || '';

  const getErrorDetails = (type) => {
    switch (type) {
      case 'invalid_credentials':
        return {
          title: 'Th√¥ng tin ƒëƒÉng nh·∫≠p kh√¥ng ch√≠nh x√°c',
          description: 'Email ho·∫∑c m·∫≠t kh·∫©u b·∫°n nh·∫≠p kh√¥ng ƒë√∫ng. Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin.',
          icon: 'üîê',
          suggestions: [
            'Ki·ªÉm tra l·∫°i email v√† m·∫≠t kh·∫©u',
            'ƒê·∫£m b·∫£o Caps Lock kh√¥ng ƒë∆∞·ª£c b·∫≠t',
            'Th·ª≠ ƒëƒÉng nh·∫≠p l·∫°i'
          ]
        };
      case 'account_not_verified':
        return {
          title: 'T√†i kho·∫£n ch∆∞a ƒë∆∞·ª£c x√°c th·ª±c',
          description: 'B·∫°n c·∫ßn x√°c th·ª±c t√†i kho·∫£n tr∆∞·ªõc khi c√≥ th·ªÉ ƒëƒÉng nh·∫≠p.',
          icon: 'üìß',
          suggestions: [
            'Ki·ªÉm tra email ƒë·ªÉ l·∫•y m√£ x√°c th·ª±c',
            'Nh·∫≠p m√£ OTP ƒë·ªÉ x√°c th·ª±c t√†i kho·∫£n',
            'N·∫øu kh√¥ng nh·∫≠n ƒë∆∞·ª£c email, h√£y th·ª≠ g·ª≠i l·∫°i'
          ]
        };
      case 'account_locked':
        return {
          title: 'T√†i kho·∫£n ƒë√£ b·ªã kh√≥a',
          description: 'T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ b·ªã kh√≥a do nhi·ªÅu l·∫ßn ƒëƒÉng nh·∫≠p sai.',
          icon: 'üö´',
          suggestions: [
            'Li√™n h·ªá v·ªõi qu·∫£n tr·ªã vi√™n ƒë·ªÉ m·ªü kh√≥a',
            'Th·ª≠ ƒëƒÉng nh·∫≠p l·∫°i sau 30 ph√∫t',
            'S·ª≠ d·ª•ng ch·ª©c nƒÉng qu√™n m·∫≠t kh·∫©u'
          ]
        };
      case 'server_error':
        return {
          title: 'L·ªói m√°y ch·ªß',
          description: 'C√≥ l·ªói x·∫£y ra t·ª´ ph√≠a m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau.',
          icon: '‚ö†Ô∏è',
          suggestions: [
            'Th·ª≠ ƒëƒÉng nh·∫≠p l·∫°i sau v√†i ph√∫t',
            'Ki·ªÉm tra k·∫øt n·ªëi internet',
            'Li√™n h·ªá h·ªó tr·ª£ n·∫øu l·ªói v·∫´n ti·∫øp t·ª•c'
          ]
        };
      default:
        return {
          title: 'L·ªói ƒëƒÉng nh·∫≠p',
          description: errorMessage,
          icon: '‚ùå',
          suggestions: [
            'Th·ª≠ ƒëƒÉng nh·∫≠p l·∫°i',
            'Ki·ªÉm tra th√¥ng tin ƒëƒÉng nh·∫≠p',
            'Li√™n h·ªá h·ªó tr·ª£ n·∫øu c·∫ßn thi·∫øt'
          ]
        };
    }
  };

  const errorDetails = getErrorDetails(errorType);

  const handleRetryLogin = () => {
    navigate('/login', { state: { email } });
  };

  const handleVerifyAccount = () => {
    navigate('/verify-otp', { state: { email } });
  };

  const handleForgotPassword = () => {
    navigate('/forgot-password', { state: { email } });
  };

  return (
    <div className="error-page">
      <div className="container">
        <div className="row justify-content-center">
          <div className="col-md-8 col-lg-6">
            <div className="card error-card">
              <div className="card-body text-center p-5">
              <div className="mb-4">
                <div className="error-icon text-danger">{errorDetails.icon}</div>
                <h2 className="error-title">{errorDetails.title}</h2>
                <p className="error-description">{errorDetails.description}</p>
              </div>

              <div className="suggestions-list">
                <h5>G·ª£i √Ω kh·∫Øc ph·ª•c:</h5>
                <ul className="list-unstyled text-start">
                  {errorDetails.suggestions.map((suggestion, index) => (
                    <li key={index}>
                      <i className="fas fa-arrow-right me-2"></i>
                      {suggestion}
                    </li>
                  ))}
                </ul>
              </div>

              <div className="action-buttons d-grid gap-2 d-md-flex justify-content-md-center">
                {errorType === 'account_not_verified' ? (
                  <>
                    <button 
                      className="btn btn-primary me-2" 
                      onClick={handleVerifyAccount}
                    >
                      <i className="fas fa-envelope me-2"></i>
                      X√°c th·ª±c t√†i kho·∫£n
                    </button>
                    <button 
                      className="btn btn-outline-secondary" 
                      onClick={handleRetryLogin}
                    >
                      <i className="fas fa-arrow-left me-2"></i>
                      Quay l·∫°i ƒëƒÉng nh·∫≠p
                    </button>
                  </>
                ) : errorType === 'invalid_credentials' ? (
                  <>
                    <button 
                      className="btn btn-primary me-2" 
                      onClick={handleRetryLogin}
                    >
                      <i className="fas fa-redo me-2"></i>
                      Th·ª≠ l·∫°i
                    </button>
                    <button 
                      className="btn btn-outline-warning" 
                      onClick={handleForgotPassword}
                    >
                      <i className="fas fa-key me-2"></i>
                      Qu√™n m·∫≠t kh·∫©u?
                    </button>
                  </>
                ) : (
                  <>
                    <button 
                      className="btn btn-primary me-2" 
                      onClick={handleRetryLogin}
                    >
                      <i className="fas fa-redo me-2"></i>
                      Th·ª≠ l·∫°i
                    </button>
                    <Link 
                      className="btn btn-outline-secondary" 
                      to="/login"
                    >
                      <i className="fas fa-arrow-left me-2"></i>
                      Quay l·∫°i ƒëƒÉng nh·∫≠p
                    </Link>
                  </>
                )}
              </div>

              <div className="contact-info">
                <small>
                  N·∫øu b·∫°n v·∫´n g·∫∑p v·∫•n ƒë·ªÅ, vui l√≤ng{' '}
                  <Link to="/contact">
                    li√™n h·ªá h·ªó tr·ª£
                  </Link>
                  {' '}ho·∫∑c g·ª≠i email ƒë·∫øn{' '}
                  <a href="mailto:support@example.com">
                    support@example.com
                  </a>
                </small>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}